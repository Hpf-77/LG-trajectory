z%pbohm 理论 计算动量空间玻姆轨迹


clear all
clc

%初始值设置
l1 = 3;
l2 = -3;
p = 0;
w0 = 0.5;                        % 束腰
lamd = 810e-6;                 %波长 单位 mm
h = 1;                           % 步长，z轴间隔
zmax =10000;              %最远传播距离
z0 = 500;                      %初始z0平面
c = 3e11;                      %光速，单位mm

%初始 动量空间 半径选取      在半径方向 依照光强分100份，第一个点为1%光强处对应半径
r0 =[0.354317982867190,0.398115584671806,0.427250278932308,0.449833107359655,0.468613335466665,0.484882343870881,0.499357965509158,0.512483518576878,0.524553428889158,0.535773969410932,0.546295708578530,0.556232193045980,0.565671352819190,0.574682799249563,0.583322679405613,0.591637011629147,0.599664041715339,0.607435947411642,0.614980097351221,0.622319998037107,0.629476017815128,0.636465948433943,0.643305446348722,0.650008383647440,0.656587130135917,0.663052782342837,0.669415351141097,0.675683916776443,0.681866757988582,0.687971460363914,0.694005007910539,0.699973860983605,0.705884023034708,0.711741098157934,0.717550341018189,0.723316700446137,0.729044857747856,0.734739260590848,0.740404153179991,0.746043603318885,0.751661526857380,0.757261709949975,0.762847829488538,0.768423472023472,0.773992151447848,0.779557325687483,0.785122412615004,0.790690805386738,0.796265887386943,0.801851046953885,0.807449692056287,0.813065265086294,0.818701257936408,0.824361227532697,0.830048812005244,0.835767747689439,0.841521887168858,0.847315218592632,0.853151886528225,0.859036214645397,0.864972730570232,0.870966193301095,0.877021623643475,0.883144338200674,0.889339987555856,0.895614599402627,0.901974627532324,0.908427007774243,0.914979222220706,0.921639373365890,0.928416270164046,0.935319528494148,0.942359689137650,0.949548357180414,0.956898367803242,0.964423984818175,0.972141140168052,0.980067725119634,0.988223947315469,0.996632772606861,1.00532047727248,1.01431734576017,1.02365856292253,1.03338537016843,1.04354658582419,1.05420063768612,1.06541833134523,1.07728670126881,1.08991449988658,1.10344024514007,1.11804441659543,1.13396868437835,1.15154771918455,1.17126505593524,1.19385900373125,1.22054499791814,1.25355467607225,1.29776864617054,1.36818857031132];
r = r0(1:1:99);
[ra,rb] = size(r);

%初始 动量空间 角度选取     在角度方向 依照光强分97份，
theta0 = [0.0654498469497874,0.130899693899575,0.196349540849362,0.261799387799149,0.327249234748937,0.392699081698724,0.458148928648512,0.523598775598299,0.589048622548086,0.654498469497874,0.719948316447661,0.785398163397448,0.850848010347236,0.916297857297023,0.981747704246810,1.04719755119660,1.11264739814639,1.17809724509617,1.24354709204596,1.30899693899575,1.37444678594553,1.43989663289532,1.50534647984511,1.57079632679490,1.63624617374468,1.70169602069447,1.76714586764426,1.83259571459405,1.89804556154383,1.96349540849362,2.02894525544341,2.09439510239320,2.15984494934298,2.22529479629277,2.29074464324256,2.35619449019235,2.42164433714213,2.48709418409192,2.55254403104171,2.61799387799149,2.68344372494128,2.74889357189107,2.81434341884086,2.87979326579064,2.94524311274043,3.01069295969022,3.07614280664001,3.14159265358979,3.20704250053958,3.27249234748937,3.33794219443916,3.40339204138894,3.46884188833873,3.53429173528852,3.59974158223831,3.66519142918809,3.73064127613788,3.79609112308767,3.86154097003745,3.92699081698724,3.99244066393703,4.05789051088682,4.12334035783660,4.18879020478639,4.25424005173618,4.31968989868597,4.38513974563575,4.45058959258554,4.51603943953533,4.58148928648512,4.64693913343490,4.71238898038469,4.77783882733448,4.84328867428426,4.90873852123405,4.97418836818384,5.03963821513363,5.10508806208341,5.17053790903320,5.23598775598299,5.30143760293278,5.36688744988256,5.43233729683235,5.49778714378214,5.56323699073193,5.62868683768171,5.69413668463150,5.75958653158129,5.82503637853108,5.89048622548086,5.95593607243065,6.02138591938044,6.08683576633022,6.15228561328001,6.21773546022980,6.28318530717959];
theta = theta0(1:1:96);
[ta,tb] = size (theta);
jmax = tb;
%叠加系数a
a1 = 1;
a2 = 0;
                
%构建动量空间中的 LG光束
syms x;
syms y;
syms z;

LGlight_ph1 = exp(-1i * l1 * atan2(y,x));
LGlight_ph2 = exp(-1i * l2 * atan2(y,x));
LGlight_01 = a1*LGlight_p(l1,p,w0,lamd);%
LGlight_02 = a2*LGlight_p(l2,p,w0,lamd);


LGlight_full = LGlight_01 * LGlight_ph1 + LGlight_02 * LGlight_ph2 ;
LGlight_c = conj(LGlight_full) * LGlight_full;


%初始值分配内存
zlab = z0:h:zmax;                        %z列表
[a,b] = size(zlab);
xlab = zeros (jmax,b,rb);                %（角度，z，半径）
ylab = xlab;
Vxlab = xlab;
Vylab = xlab;
Vzlab = xlab;
x_p_lab = xlab;
y_p_lab = xlab;
rlab = zeros (rb, b) ;
Vrlab = rlab;
rlab(:, 1) = r';
lg_c = zeros(1,b);

jmaxrb = jmax *rb;
picmodel = zeros (jmaxrb,b);                   
Xmodel = picmodel;
Ymodel = picmodel;
Xpmodel = picmodel;
Ypmodel = picmodel;
% pbohm  速度
syms x;
syms y;
syms z;

 dLGx1 = diff(LGlight_01,x)*LGlight_ph1 + (LGlight_01 * LGlight_ph1) * (-1i * l1 * (-y) / ((x)^2+y^2));  %LG光束对x求偏导
 dLGy1 = diff(LGlight_01,y)*LGlight_ph1+ (LGlight_01 * LGlight_ph1) * (-1i * l1 * (x) / ((x)^2+y^2));  %LG光束对y求偏导
 dLGx2 = diff(LGlight_02,x)*LGlight_ph2 + (LGlight_02 * LGlight_ph2) * (-1i * l2 * (-y) / ((x)^2+y^2));  %LG光束对x求偏导
 dLGy2 = diff(LGlight_02,y)*LGlight_ph2 + (LGlight_02 * LGlight_ph2) * (-1i * l2 * (x) / ((x)^2+y^2));  %LG光束对y求偏导
 
vxpre = 0*x;                                                       %动量空间速度
vypre = 0*y; 
LGlight_C = abs(LGlight_full)^2;

x_p_pre = 1i *conj(LGlight_full) * (dLGx1+dLGx2)/abs(LGlight_full)^2;           %位置空间对应坐标
y_p_pre = 1i *conj(LGlight_full) * (dLGy1+dLGy2)/abs(LGlight_full)^2;

%玻姆轨迹计算

for i = 1:1:b-1                      %z   计算每个z平面上的玻姆速度
                                 

         z = zlab(i);
        
   for t = 1:rb    %   计算平面上的玻姆速度，以及下个平面上的对应点。


   y0 = r(t)*sin(theta');
   x0 = r(t)*cos(theta');
   
   xlab(:,1,t) = x0(1:jmax);
   ylab(:,1,t) = y0(1:jmax);

    %通过当前平面计算下一 z  平面的速度和位置
        x = xlab(:,i,t);
        y = ylab(:,i,t);
        vx = eval(vxpre);                                        %当前平面玻姆速度
        vy = eval(vypre);        
        Vx = lamd /(2*pi) * real(vx);
        Vy = lamd / (2*pi) * real(vy);
        Vz = sqrt(1-conj(Vx).*Vx - conj(Vy).*Vy );
        dx = (zlab(i+1) - zlab(i))./Vz .* Vx ;               %两平面上位置差值
        dy = (zlab(i+1) - zlab(i))./Vz .* Vy ;
        xlab(:,i+1,t) = xlab(:,i,t)+dx;                        %下一平面动量
        ylab(:,i+1,t) = ylab(:,i,t) + dy;
        rlab(t,i+1) = sqrt(xlab(1,i+1,t)^2 + ylab(1,i+1,t)^2);
        Vxlab(:,i,t) = Vx;
        Vylab(:,i,t) = Vy;
        Vzlab(:,i,t) = Vz;
        Vrlab(t,i) = sqrt(Vx(1)^2 + Vy(1)^2);
        
        x_p = real(eval(x_p_pre));                           %该动量平面上各点对应的位置空间坐标
        y_p = real(eval(y_p_pre));
        x_p_lab(:,i,t) = x_p;
        y_p_lab(:,i,t) = y_p;
        
        xyz = eval(LGlight_c);   %上式求的某点的光强

        Wline = xyz  ;              
        for tp = 1:1:jmax                                       %该循环的目的是将二维平面压缩成线，便于画散点图
            
            xyzi = (t-1)*jmax+tp;
            picmodel(xyzi,i) = Wline(tp);
            Xmodel(xyzi,i) = xlab(tp,i,t) ;                 %动量空间
            Ymodel(xyzi,i) =ylab(tp,i,t) ;
            Xpmodel(xyzi,i) =x_p_lab(tp,i,t) ;           %位置空间
            Ypmodel(xyzi,i) =y_p_lab(tp,i,t) ;
            
        end

   end


end
